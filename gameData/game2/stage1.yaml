x-aimerLeft: &aimerLeft { spawn: nonShootingAimer, x: 128.5, y: -22 }
x-aimerRight: &aimerRight { spawn: nonShootingAimer, x: 228.5, y: -22 }

x-sinusLeft: &sinusLeft { spawn: sinus, x: 75, y: -20 }
x-sinusRight: &sinusRight
  spawn: sinus
  x: 280
  y: -20
  actions: [{ type: "setAttribute", attribute: "right", value: true }]

x-leftMiniBoss: &leftMiniBoss { spawn: firstMiniboss, x: 118.881, y: -20 }
x-rightMiniBoss: &rightMiniBoss
  spawn: firstMiniboss
  x: 237.762
  y: -20
  actions: [{ type: "setAttribute", attribute: "right", value: true }]

x:
  - &aimers
      repeat: 8
      actions: [*aimerLeft, *aimerRight, wait: 40]

  - &sinuses
      repeat: 5
      actions:
        - do: [*sinusLeft, wait: 70]
        - do: [*sinusRight, wait: 70]

enemy:
    name: stage1
    diameter: 20
    hp: 9999
    actions:
      - { type: setAttribute, attribute: collisionType, value: none }
      - { type: gfxSetShape, shape: none }
      - wait: 120
      - *aimers
      - wait: 120
      - *sinuses
      - wait: 200
      - do: [*leftMiniBoss, *rightMiniBoss]
---
enemy:
  name: nonShootingAimer
  hp: 4
  diameter: 22
  onDeathAction: { spawn: roundExplosion }
  actions: 
    - setSpeed: 1.60
    - parallelAll:
      - - repeat: 26.25
          actions:
            - type: rotate_towards_player
            - wait: 8
      - - forever:
            - type: move_according_to_speed_and_direction
            - type: waitNextFrame
---
x-moveLeft: &moveLeft
  type: move
  frames: 80
  x: -205
  y: 30
x-moveRight: &moveRight
  <<: *moveLeft
  x: 205

x-rotateLeft: &rotateLeft
  - type: rotate_around_relative_point
    degrees: -180
    frames: 35
    point: { y: 31 }
x-rotateRight: &rotateRight
  - <<: *rotateLeft
    degrees: 180

x-shootWhileRotation: &shootWhileRotation
  - wait: 16
  - type: shoot_toward_player

x-rotateLeftAndShoot: &rotateLeftAndShoot
  parallelAll: [*rotateLeft, *shootWhileRotation]

x-rotateRightAndShoot: &rotateRightAndShoot
  parallelAll: [*rotateRight, *shootWhileRotation]

enemy:
  name: sinus
  hp: 3
  diameter: 24
  onDeathAction: { spawn: roundExplosion }
  actions:
  - setShotSpeed: 2
  - { attr: right, is: true, yes: [{ type: mirrorX, value: true }] }
  - twice:
    - *rotateLeftAndShoot
    - *moveRight
    - *rotateRightAndShoot
    - *moveLeft
---
x-shootDown: &shootDown { type: shootDirection, x: 0, y: 1}

x-shootingPattern: &shootingPattern
  - wait: 75
  - forever:
    - setShotSpeed: 2.6
    - thrice: [*shootDown, wait: 3]
    - wait: 55
    - setShotSpeed: 2.2
    - twice:
      - type: shoot_toward_player
      - { type: shoot_beside_player, degrees: 25 }
      - { type: shoot_beside_player, degrees: -25 }
      - wait: 64

x:
- &intoScreen           { moveToAbsolute: { x: 116, y: 0 }, frames: 40 }
- &down1                { moveToAbsolute: { y: 75 }, frames: 52 }
- &quarterCircleDownIn  {type: rotate_around_relative_point, degrees: -90, frames: 39, point: { x: 25, y: -5 }}
- &quarterCircleDownOut {type: rotate_around_relative_point, degrees: 90, frames: 39, point: { x: -20, y: -11 }}
- &in1                  { moveToAbsolute: { x: 139.5 }, frames: 47 }
- &up1                  { moveToAbsolute: { y: 11 }, frames: 100 }
- &halfCircleLeftDown   { type: rotate_around_absolute_point, point: { y: 61 }, degrees: -180, frames: 100 }
- &out1                 { moveToAbsolute: { x: 99.5 }, frames: 50 }
- &down2                { moveToAbsolute: { y: 141 }, frames: 30 }
- &up2                  { moveToAbsolute: { y: 61 }, frames: 80 }
- &downIn               { moveToAbsolute: { x: 138.5, y: 105 }, frames: 40 }
- &rotateClockwise      { type: rotate_around_absolute_point, point: { x: 178.5 }, degrees: 360, frames: 240 }
- &rotateAntiClockwise  { type: rotate_around_absolute_point, point: { x: 178.5 }, degrees: -360, frames: 240 }
- &downOutOfScreen      { moveToAbsolute: { x: 98.5, y: 290 }, frames: 210 }

x-movementPattern: &movementPattern
  - { attr: right, is: true, yes: [{ type: mirrorX, value: true }] }
  - *intoScreen
  - *down1
  - seq:
      - [*quarterCircleDownIn, wait: 25,]
      - [*quarterCircleDownOut, wait: 25,]
      - [*in1, wait: 25,]
      - [*up1, wait: 25,]
      - [*halfCircleLeftDown, wait: 25,]
      - [*out1, wait: 25,]
      - [*down2, wait: 25,]
      - [*up2, wait: 25,]
      - [*downIn, wait: 25]
  - { attr: right, is: true, yes: [{ type: mirrorY, value: true }] }
  - *rotateClockwise
  - wait: 25
  - *rotateAntiClockwise
  - { attr: right, is: true, yes: [{ type: mirrorY, value: false }] }
  - wait: 25
  - *downOutOfScreen

enemy:
  name: firstMiniboss
  hp: 120
  diameter: 35
  actions:
  - parallelRace:
    - *shootingPattern
    - *movementPattern